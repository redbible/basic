apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdkVersion

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "mobile.bible.test"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    dexOptions {
        preDexLibraries false
        additionalParameters "--multi-dex", "--set-max-idx-number", "65000"
    }
    buildTypes {
        debug {
            debuggable = true
        }
        release {
            lintOptions {
                disable 'MissingTranslation'
                checkReleaseBuilds false
                abortOnError false
            }

            minifyEnabled false
            debuggable = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "coinone"
    productFlavors {
        dev {
            dimension "coinone"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"

            resValue "string", "app_name", "coinone-DEV"
            buildConfigField "String", "API_URL", "\"https://dapi.kakao.com/\""

            copy {
                from 'src/dev/'
                include '*.json'
                into '.'
            }
        }
        stage {
            dimension "coinone"
            applicationIdSuffix ".stage"
            versionNameSuffix "-stage"

            resValue "string", "app_name", "coinone-STAGE"
            buildConfigField "String", "API_URL", "\"https://api.github.com/\""

            copy {
                from 'src/stage/'
                include '*.json'
                into '.'
            }
        }
        real {
            dimension "coinone"

            resValue "string", "app_name", "coinone"
            buildConfigField "String", "API_URL", "\"https://api.github.com/\""

            copy {
                from 'src/real/'
                include '*.json'
                into '.'
            }
        }
    }

    android.variantFilter { variant ->
        if ((variant.buildType.name == 'release' && variant.getFlavors().get(0).name == 'dev')
                || (variant.buildType.name == 'release')
                || (variant.getFlavors().get(0).name == 'real')) {
            variant.setIgnore(true)
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    // Support Lib
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // RxJava2
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

    // OKHttp3 + Retrofit2
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"

    // Glide
    implementation("com.github.bumptech.glide:glide:$glideVersion") {
        exclude group: "com.android.support"
    }
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Koin - Kotlin Injection
    implementation "org.koin:koin-android:$koinAndroidVersion"
    implementation "org.koin:koin-android-viewmodel:$koinAndroidVersion"

    // Gson
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Firebase
    implementation "com.google.firebase:firebase-messaging:$firebaseMessageVersion"
    implementation "com.google.firebase:firebase-core:$firebaseCoreVersion"

    // SecurePreference
    implementation "com.scottyab:secure-preferences-lib:$securePreferenceVersion"

    implementation "gun0912.ted:tedpermission-rx2:$tedPermission"

    implementation("com.mikepenz:materialdrawer:$aboutlibVersion") { transitive = true }

    testImplementation 'junit:junit:4.12'
    testImplementation "org.koin:koin-test:$koinAndroidVersion"
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}
